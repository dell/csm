#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ def get_cluster_rules(application):
#@ if application == "isilon":
#@    return get_cluster_rules_isilon()
#@ elif application == "unity":
#@    return get_cluster_rules_unity()
#@ elif application == "powerstore":
#@    return get_cluster_rules_powerstore()
#@ elif application == "vxflexos":
#@    return get_cluster_rules_vxflexos()
#@ else:
#@ assert.fail("cluster rules for application {} not found".format(application))
#@ end
#@ end

#@ def get_cluster_rules_isilon():
- apiGroups: [ "" ]
  resources: [ "events" ]
  verbs: [ "list", "watch", "create", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "nodes" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumes" ]
  verbs: [ "get", "list", "watch", "create", "delete", "update" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims" ]
  verbs: [ "get", "list", "watch", "update" ]
- apiGroups: [ "" ]
  resources: [ "pods" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "storageclasses" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "volumeattachments" ]
  verbs: [ "get", "list", "watch", "update", "patch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "volumeattachments/status" ]
  verbs: [ "patch" ]
- apiGroups: [ "csi.storage.k8s.io" ]
  resources: [ "csinodeinfos" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "csinodes" ]
  verbs: [ "get", "list", "watch", "update" ]
#! below for snapshotter
- apiGroups: [ "" ]
  resources: [ "secrets" ]
  verbs: [ "get", "list" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshotclasses" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshotcontents" ]
  verbs: [ "create", "get", "list", "watch", "update", "delete" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshots" ]
  verbs: [ "get", "list", "watch", "update" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshots/status" ]
  verbs: [ "update" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshotcontents/status" ]
  verbs: [ "update" ]
- apiGroups: [ "apiextensions.k8s.io" ]
  resources: [ "customresourcedefinitions" ]
  verbs: [ "create", "list", "watch", "delete" ]
#! below for resizer
- apiGroups: [ "" ]
  resources: [ "persistentvolumes" ]
  verbs: [ "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims/status" ]
  verbs: [ "update", "patch" ]
- apiGroups: [ "coordination.k8s.io" ]
  resources: [ "leases" ]
  verbs: [ "get", "watch", "list", "delete", "update", "create" ]
#@ end

#@ def get_cluster_rules_unity():
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
#@ if data.values.podmon.enabled:
  verbs: ["get", "list", "watch", "patch"]
#@ else:
  verbs: ["get", "list", "watch"]
#@ end
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete", "update","patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "create", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
#@ if data.values.podmon.enabled:
  verbs: ["get", "list", "watch", "update", "patch", "delete"]
#@ else:
  verbs: ["get", "list", "watch", "update","patch"]
#@ end
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments/status"]
  verbs: ["patch"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csinodeinfos"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
#@ if data.values.podmon.enabled:
  verbs: ["get", "list", "watch", "update", "delete"]
#@ else:
  verbs: ["get", "list", "watch"]
#@ end
#! below for resizer
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims/status" ]
  verbs: [ "update", "patch" ]
#@ end

#@ def get_cluster_rules_powerstore():
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["create", "get", "list", "watch", "update", "delete"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents/status"]
  verbs: ["update"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots", "volumesnapshots/status"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments/status"]
  verbs: ["patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "list", "watch", "delete"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes"]
  verbs: ["get", "list", "watch"]
#! below for resizer
- apiGroups: [""]
  resources: ["persistentvolumeclaims/status"]
  verbs: ["update", "patch"]
#@ end
  
#@ def get_cluster_rules_vxflexos():
- apiGroups: [ "coordination.k8s.io" ]
  resources: [ "leases" ]
  verbs: [ "get", "watch", "list", "delete", "update", "create" ]
- apiGroups: [ "" ]
  resources: [ "events" ]
  verbs: [ "list", "watch", "create", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "nodes" ]
  #@ if data.values.podmon.enabled:
  verbs: [ "get", "list", "watch", "patch" ]
  #@ else:
  verbs: [ "get", "list", "watch" ]
  #@ end
- apiGroups: [ "" ]
  resources: [ "persistentvolumes" ]
  verbs: [ "get", "list", "watch", "create", "delete", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims" ]
  verbs: [ "get", "list", "watch", "update", "patch" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims/status" ]
  verbs: [ "update", "patch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "storageclasses" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "volumeattachments" ]
  #@ if data.values.podmon.enabled:
  verbs: [ "get", "list", "watch", "update", "patch", "delete" ]
  #@ else:
  verbs: [ "get", "list", "watch", "update", "patch" ]
  #@ end
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "csinodes" ]
  verbs: [ "get", "list", "watch", "update" ]
- apiGroups: [ "storage.k8s.io" ]
  resources: [ "volumeattachments/status" ]
  verbs: [ "patch" ]
- apiGroups: [ "csi.storage.k8s.io" ]
  resources: [ "csinodeinfos" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "" ]
  resources: [ "pods" ]
  #@ if data.values.podmon.enabled:
  verbs: [ "get", "list", "watch", "update", "delete" ]
  #@ else:
  verbs: [ "get", "list", "watch" ]
  #@ end
#! below for snapshotter
- apiGroups: [ "" ]
  resources: [ "secrets" ]
  verbs: [ "get", "list" ]
  #@ if data.values.vgsnapshotter.enabled:
- apiGroups: [ "volumegroup.storage.dell.com" ]
  resources: [ "dellcsivolumegroupsnapshots","dellcsivolumegroupsnapshots/status" ]
  verbs: [ "create", "list", "watch", "delete", "update" ]
  #@ end 
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshotclasses" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshotcontents" ]
  verbs: [ "create", "get", "list", "watch", "update", "delete" ]
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshots" ]
  #@ if data.values.vgsnapshotter.enabled:
  verbs: [ "get", "list", "watch", "update", "create" ]
  #@ else:
  verbs: [ "get", "list", "watch", "update" ]
  #@ end
- apiGroups: [ "snapshot.storage.k8s.io" ]
  resources: [ "volumesnapshots/status","volumesnapshotcontents/status" ]
  verbs: [ "get", "list", "watch", "update" ]
- apiGroups: [ "apiextensions.k8s.io" ]
  resources: [ "customresourcedefinitions" ]
  verbs: [ "create", "list", "watch", "delete", "update" ]
#@ end
