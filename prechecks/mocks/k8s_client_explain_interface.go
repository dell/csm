// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/prechecks (interfaces: K8sClientExplainInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	reflect "reflect"
)

// MockK8sClientExplainInterface is a mock of K8sClientExplainInterface interface
type MockK8sClientExplainInterface struct {
	ctrl     *gomock.Controller
	recorder *MockK8sClientExplainInterfaceMockRecorder
}

// MockK8sClientExplainInterfaceMockRecorder is the mock recorder for MockK8sClientExplainInterface
type MockK8sClientExplainInterfaceMockRecorder struct {
	mock *MockK8sClientExplainInterface
}

// NewMockK8sClientExplainInterface creates a new mock instance
func NewMockK8sClientExplainInterface(ctrl *gomock.Controller) *MockK8sClientExplainInterface {
	mock := &MockK8sClientExplainInterface{ctrl: ctrl}
	mock.recorder = &MockK8sClientExplainInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockK8sClientExplainInterface) EXPECT() *MockK8sClientExplainInterfaceMockRecorder {
	return m.recorder
}

// GetAPIResource mocks base method
func (m *MockK8sClientExplainInterface) GetAPIResource(arg0 []byte, arg1 string) (*v1.APIResource, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIResource", arg0, arg1)
	ret0, _ := ret[0].(*v1.APIResource)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAPIResource indicates an expected call of GetAPIResource
func (mr *MockK8sClientExplainInterfaceMockRecorder) GetAPIResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIResource", reflect.TypeOf((*MockK8sClientExplainInterface)(nil).GetAPIResource), arg0, arg1)
}
