// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/store (interfaces: ApplicationStateChangeStoreInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/dell/csm-deployment/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplicationStateChangeStoreInterface is a mock of ApplicationStateChangeStoreInterface interface
type MockApplicationStateChangeStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationStateChangeStoreInterfaceMockRecorder
}

// MockApplicationStateChangeStoreInterfaceMockRecorder is the mock recorder for MockApplicationStateChangeStoreInterface
type MockApplicationStateChangeStoreInterfaceMockRecorder struct {
	mock *MockApplicationStateChangeStoreInterface
}

// NewMockApplicationStateChangeStoreInterface creates a new mock instance
func NewMockApplicationStateChangeStoreInterface(ctrl *gomock.Controller) *MockApplicationStateChangeStoreInterface {
	mock := &MockApplicationStateChangeStoreInterface{ctrl: ctrl}
	mock.recorder = &MockApplicationStateChangeStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationStateChangeStoreInterface) EXPECT() *MockApplicationStateChangeStoreInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockApplicationStateChangeStoreInterface) Create(arg0 *model.ApplicationStateChange) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockApplicationStateChangeStoreInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockApplicationStateChangeStoreInterface)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockApplicationStateChangeStoreInterface) Delete(arg0 *model.ApplicationStateChange) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockApplicationStateChangeStoreInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockApplicationStateChangeStoreInterface)(nil).Delete), arg0)
}

// GetByApplicationID mocks base method
func (m *MockApplicationStateChangeStoreInterface) GetByApplicationID(arg0 uint) (*model.ApplicationStateChange, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByApplicationID", arg0)
	ret0, _ := ret[0].(*model.ApplicationStateChange)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByApplicationID indicates an expected call of GetByApplicationID
func (mr *MockApplicationStateChangeStoreInterfaceMockRecorder) GetByApplicationID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByApplicationID", reflect.TypeOf((*MockApplicationStateChangeStoreInterface)(nil).GetByApplicationID), arg0)
}

// GetById mocks base method
func (m *MockApplicationStateChangeStoreInterface) GetById(arg0 uint) (*model.ApplicationStateChange, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", arg0)
	ret0, _ := ret[0].(*model.ApplicationStateChange)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById
func (mr *MockApplicationStateChangeStoreInterfaceMockRecorder) GetById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockApplicationStateChangeStoreInterface)(nil).GetById), arg0)
}
