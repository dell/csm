// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/store (interfaces: ApplicationStoreInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/dell/csm-deployment/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplicationStoreInterface is a mock of ApplicationStoreInterface interface
type MockApplicationStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationStoreInterfaceMockRecorder
}

// MockApplicationStoreInterfaceMockRecorder is the mock recorder for MockApplicationStoreInterface
type MockApplicationStoreInterfaceMockRecorder struct {
	mock *MockApplicationStoreInterface
}

// NewMockApplicationStoreInterface creates a new mock instance
func NewMockApplicationStoreInterface(ctrl *gomock.Controller) *MockApplicationStoreInterface {
	mock := &MockApplicationStoreInterface{ctrl: ctrl}
	mock.recorder = &MockApplicationStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationStoreInterface) EXPECT() *MockApplicationStoreInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockApplicationStoreInterface) Create(arg0 *model.Application) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockApplicationStoreInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockApplicationStoreInterface)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockApplicationStoreInterface) Delete(arg0 *model.Application) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockApplicationStoreInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockApplicationStoreInterface)(nil).Delete), arg0)
}

// GetByID mocks base method
func (m *MockApplicationStoreInterface) GetByID(arg0 string) (*model.Application, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*model.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockApplicationStoreInterfaceMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockApplicationStoreInterface)(nil).GetByID), arg0)
}

// Update mocks base method
func (m *MockApplicationStoreInterface) Update(arg0 *model.Application) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockApplicationStoreInterfaceMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockApplicationStoreInterface)(nil).Update), arg0)
}
