// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/handler (interfaces: K8sClientInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	kubernetes "k8s.io/client-go/kubernetes"
	reflect "reflect"
)

// MockK8sClientInterface is a mock of K8sClientInterface interface
type MockK8sClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockK8sClientInterfaceMockRecorder
}

// MockK8sClientInterfaceMockRecorder is the mock recorder for MockK8sClientInterface
type MockK8sClientInterfaceMockRecorder struct {
	mock *MockK8sClientInterface
}

// NewMockK8sClientInterface creates a new mock instance
func NewMockK8sClientInterface(ctrl *gomock.Controller) *MockK8sClientInterface {
	mock := &MockK8sClientInterface{ctrl: ctrl}
	mock.recorder = &MockK8sClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockK8sClientInterface) EXPECT() *MockK8sClientInterfaceMockRecorder {
	return m.recorder
}

// DiscoverK8sDetails mocks base method
func (m *MockK8sClientInterface) DiscoverK8sDetails(arg0 []byte) (string, *bool, *kubernetes.Clientset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiscoverK8sDetails", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*bool)
	ret2, _ := ret[2].(*kubernetes.Clientset)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// DiscoverK8sDetails indicates an expected call of DiscoverK8sDetails
func (mr *MockK8sClientInterfaceMockRecorder) DiscoverK8sDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscoverK8sDetails", reflect.TypeOf((*MockK8sClientInterface)(nil).DiscoverK8sDetails), arg0)
}
