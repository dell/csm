#@ load("@ytt:data", "data")
#@ load("@ytt:assert", "assert")

#@ def get_application_containers(application):
#@ if application == "isilon":
#@    return get_containers_isilon(application)
#@ elif application == "unity":
#@    return get_containers_unity(application)
#@ elif application == "powerstore":
#@    return get_containers_powerstore(application)
#@ elif application == "vxflexos":
#@    return get_containers_vxflexos(application)
#@ else:
#@ assert.fail("containers for application {} not found".format(application))
#@ end
#@ end

#! CONTAINER SPECS for application csi-isilon
#@ def get_containers_isilon(application):
containers:
  - #@ registrar_container_spec(application)
  - #@ driver_isilon_container_spec()
#@ end

#! CONTAINER SPECS for application csi-unity
#@ def get_containers_unity(application):
containers:
  - #@ registrar_container_spec(application)
  - #@ driver_unity_container_spec()
#@ end

#! CONTAINER SPECS for application csi-powerstore
#@ def get_containers_powerstore(application):
containers:
  - #@ registrar_container_spec(application)
  - #@ driver_powerstore_container_spec()
#@ end

#! CONTAINER SPECS for application csi-vxflexos
#@ def get_containers_vxflexos(application):
containers:
  - #@ registrar_container_spec(application)
  #@ if data.values.podmon.enabled:
  - #@ podman_container_spec()
  #@ end
  - #@ driver_vxflexos_container_spec()
#@ end


#! spec for registrar sidecar container
#@ def registrar_container_spec(application):
name: registrar
image: #@ data.values.images.registrar
args:
  - "--v=5"
  - "--csi-address=$(ADDRESS)"
  #@ if application == "isilon":
  - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-isilon/csi_sock
  #@ elif application == "unity":
  - --kubelet-registration-path=/var/lib/kubelet/plugins/unity.emc.dell.com/csi_sock
  #@ elif application == "powerstore":
  - --kubelet-registration-path=/var/lib/kubelet/plugins/powerstore.emc.dell.com/csi_sock
  #@ elif application == "vxflexos":
  - --kubelet-registration-path=/var/lib/kubelet/plugins/vxflexos.emc.dell.com/csi_sock
  #@ end
env:
  - name: ADDRESS
    value: /csi/csi_sock
  - name: KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
volumeMounts:
  - name: registration-dir
    mountPath: /registration
  - name: driver-path
    mountPath: /csi
#@ end

#! spec for podman sidecar container
#@ def podman_container_spec():
name: podmon
securityContext:
  privileged: true
  capabilities:
    add: ["SYS_ADMIN"]
  allowPrivilegeEscalation: true
imagePullPolicy: Always
image: #@ data.values.podmon.image
args: #@ data.values.podmon.node.args
env:
  - name: KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
  - name: X_CSI_PRIVATE_MOUNT_DIR
    value: "/var/lib/kubelet/plugins/vxflexos.emc.dell.com/disks"
  - name: MY_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: MY_POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: MY_POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
volumeMounts:
  - name: kubelet-pods
    mountPath: /var/lib/kubelet/pods
    mountPropagation: "Bidirectional"
  - name: driver-path
    mountPath: /var/lib/kubelet/plugins/vxflexos.emc.dell.com
    mountPropagation: "Bidirectional"
  - name: usr-bin
    mountPath: /usr-bin
  - name: var-run
    mountPath: /var/run
#@ end

#! spec for csi-isilon driver sidecar container
#@ def driver_isilon_container_spec():
name: driver
command: [ "/csi-isilon" ]
securityContext:
  privileged: true
  capabilities:
    add: [ "SYS_ADMIN" ]
  allowPrivilegeEscalation: true
image: #@ data.values.images.driver
imagePullPolicy: IfNotPresent
env:
  - name: CSI_ENDPOINT
    value: /var/lib/kubelet/plugins/csi-isilon/csi_sock
  - name: X_CSI_MODE
    value: node
  - name: X_CSI_DEBUG
    value: #@ data.values.enableDebug
  - name: X_CSI_ISI_INSECURE
    value: #@ data.values.isiInsecure
  - name: X_CSI_ALLOWED_NETWORKS
    value: #@ str(data.values.allowedNetworks)
  - name: X_CSI_VERBOSE
    value: #@ str(data.values.verbose)
  - name: X_CSI_PRIVATE_MOUNT_DIR
    value: "/var/lib/kubelet/plugins/csi-isilon/disks"
  - name: X_CSI_ISI_PORT
    value: #@ data.values.isiPort
  - name: X_CSI_ISI_PATH
    value: #@ data.values.isiPath
  - name: X_CSI_ISILON_NO_PROBE_ON_START
    value: #@ data.values.noProbeOnStart
  - name: X_CSI_ISILON_NFS_V3
    value: #@ data.values.nfsV3
  - name: X_CSI_ISI_AUTOPROBE
    value: #@ data.values.autoProbe
  - name: X_CSI_NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: X_CSI_NODE_IP
    valueFrom:
      fieldRef:
        fieldPath: status.hostIP
  - name: SSL_CERT_DIR
    value: /certs
  - name: X_CSI_ISI_QUOTA_ENABLED
    value: #@ data.values.enableQuota
  - name: X_CSI_CUSTOM_TOPOLOGY_ENABLED
    value: #@ data.values.enableCustomTopology
  - name: X_CSI_ISILON_CONFIG_PATH
    value: /isilon-configs/config
  - name: X_CSI_MAX_VOLUMES_PER_NODE
    value: #@ str(data.values.maxIsilonVolumesPerNode)
volumeMounts:
  - name: driver-path
    mountPath: /var/lib/kubelet/plugins/csi-isilon
  - name: volumedevices-path
    mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
  - name: pods-path
    mountPath: /var/lib/kubelet/pods
    mountPropagation: "Bidirectional"
  - name: dev
    mountPath: /dev
  - name: certs
    mountPath: /certs
    readOnly: true
  - name: isilon-configs
    mountPath: /isilon-configs

#@ end

#! spec for csi-unity driver sidecar container
#@ def driver_unity_container_spec():
name: driver
command: [ "/csi-unity" ]
securityContext:
  privileged: true
  capabilities:
    add: [ "SYS_ADMIN" ]
  allowPrivilegeEscalation: true
image: #@ data.values.images.driver
args:
  - "--driver-name=csi-unity.dellemc.com"
  - "--driver-config=/unity-config/config"
imagePullPolicy: IfNotPresent
env:
  - name: CSI_ENDPOINT
    value: unix:///var/lib/kubelet/plugins/unity.emc.dell.com/csi_sock
  - name: X_CSI_MODE
    value: node
  - name: X_CSI_DEBUG
    value: #@ data.values.enableDebug
  - name: X_CSI_UNITY_ALLOW_MULTI_POD_ACCESS
    value: #@ data.values.allowRWOMultiPodAccess if data.values.allowRWOMultiPodAccess else "false"
  - name: X_CSI_PRIVATE_MOUNT_DIR
    value: "/var/lib/kubelet/plugins/unity.emc.dell.com/disks"
  - name: X_CSI_EPHEMERAL_STAGING_PATH
    value: /var/lib/kubelet/plugins/kubernetes.io/csi/pv/
  - name: X_CSI_ISCSI_CHROOT
    value: #@ data.values.ISCSIChroot if data.values.ISCSIChroot else "/noderoot"
  - name: X_CSI_UNITY_AUTOPROBE
    value: "true"
  - name: X_CSI_UNITY_NODENAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: X_CSI_UNITY_NODENAME_PREFIX
    value: #@ data.values.nodeNamePrefix
  - name: SSL_CERT_DIR
    value: /certs
  - name: X_CSI_UNITY_SYNC_NODEINFO_INTERVAL
    value: #@ data.values.syncNodeInfoInterval if data.values.syncNodeInfoInterval else "15"
volumeMounts:
  - name: driver-path
    mountPath: /var/lib/kubelet/plugins/unity.emc.dell.com
  - name: volumedevices-path
    mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
  - name: pods-path
    mountPath: /var/lib/kubelet/pods
    mountPropagation: "Bidirectional"
  - name: dev
    mountPath: /dev
  - name: noderoot
    mountPath: /noderoot
  - name: certs
    mountPath: /certs
    readOnly: true
  - name: unity-config
    mountPath: /unity-config

#@ end

#! spec for csi-powerstore driver sidecar container
#@ def driver_powerstore_container_spec():
name: driver
command: [ "/csi-powerstore" ]
securityContext:
  privileged: true
  capabilities:
    add: [ "SYS_ADMIN" ]
  allowPrivilegeEscalation: true
image: #@ data.values.images.driver
imagePullPolicy: Always
env:
  - name: CSI_ENDPOINT
    value: unix:///var/lib/kubelet/plugins/powerstore.emc.dell.com/csi_sock
  - name: X_CSI_MODE
    value: node
  - name: X_CSI_DEBUG
    value: #@ data.values.enableDebug
  - name: X_CSI_POWERSTORE_KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
  - name: X_CSI_POWERSTORE_NODE_NAME_PREFIX
    value: #@ data.values.nodeNamePrefix
  - name: X_CSI_POWERSTORE_NODE_ID_PATH
    value: /node-id
  - name: X_CSI_POWERSTORE_NODE_CHROOT_PATH
    value: /noderoot
  - name: X_CSI_POWERSTORE_TMP_DIR
    value: /var/lib/kubelet/plugins/powerstore.dell.emc.com/tmp
  - name: X_CSI_DRIVER_NAME
    value: powerstore.dell.emc.com
  - name: X_CSI_FC_PORTS_FILTER_FILE_PATH
    value: #@ data.values.nodeFCPortsFilterFile    
  - name: X_CSI_POWERSTORE_ENABLE_CHAP
    value: #@ data.values.connection.enableCHAP if data.values.connection.enableCHAP else "false"  
  - name: X_CSI_POWERSTORE_CONFIG_PATH
    value: /powerstore-config/config
  - name: GOPOWERSTORE_DEBUG
    value: "true"
volumeMounts:
  - name: driver-path
    mountPath: /var/lib/kubelet/plugins/powerstore.dell.emc.com
  - name: csi-path
    mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
    mountPropagation: "Bidirectional"
  - name: pods-path
    mountPath: /var/lib/kubelet/pods
    mountPropagation: "Bidirectional"
  - name: dev
    mountPath: /dev
  - name: sys
    mountPath: /sys
  - name: run
    mountPath: /run
  - name: node-id
    mountPath: /node-id
  - name: etciscsi
    mountPath: /etc/iscsi
  - name: mpath
    mountPath: /etc/multipath.conf
  - name: noderoot
    mountPath: /noderoot
  - name: powerstore-config
    mountPath: /powerstore-config

#@ end

#! spec for csi-vxflexos driver sidecar container
#@ def driver_vxflexos_container_spec():
name: driver
securityContext:
  privileged: true
  allowPrivilegeEscalation: true
  capabilities:
    add: ["SYS_ADMIN"]
image: #@ data.values.images.driver
imagePullPolicy: IfNotPresent
command: [ "/csi-vxflexos.sh" ]
args:
  - "--array-config=/vxflexos-config/config"
env:
  - name: CSI_ENDPOINT
    value: unix:///var/lib/kubelet/plugins/vxflexos.emc.dell.com/csi_sock
  - name: X_CSI_MODE
    value: node
  - name: X_CSI_DEBUG
    value: "true"
  - name: X_CSI_PRIVATE_MOUNT_DIR
    value: "/var/lib/kubelet/plugins/vxflexos.emc.dell.com/disks"
  - name: X_CSI_ALLOW_RWO_MULTI_POD_ACCESS
    value: #@ data.values.allowRWOMultiPodAccess
volumeMounts:
  - name: driver-path
    mountPath: /var/lib/kubelet/plugins/vxflexos.emc.dell.com
  - name: volumedevices-path
    mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi/volumeDevices
    mountPropagation: "Bidirectional"
  - name: pods-path
    mountPath: /var/lib/kubelet/pods
    mountPropagation: "Bidirectional"
  - name: dev
    mountPath: /dev
  - name: vxflexos-config
    mountPath: /vxflexos-config
#@ end
