// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dell/csm-deployment/store (interfaces: ClusterStoreInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/dell/csm-deployment/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClusterStoreInterface is a mock of ClusterStoreInterface interface
type MockClusterStoreInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClusterStoreInterfaceMockRecorder
}

// MockClusterStoreInterfaceMockRecorder is the mock recorder for MockClusterStoreInterface
type MockClusterStoreInterfaceMockRecorder struct {
	mock *MockClusterStoreInterface
}

// NewMockClusterStoreInterface creates a new mock instance
func NewMockClusterStoreInterface(ctrl *gomock.Controller) *MockClusterStoreInterface {
	mock := &MockClusterStoreInterface{ctrl: ctrl}
	mock.recorder = &MockClusterStoreInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClusterStoreInterface) EXPECT() *MockClusterStoreInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockClusterStoreInterface) Create(arg0 *model.Cluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockClusterStoreInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockClusterStoreInterface)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockClusterStoreInterface) Delete(arg0 *model.Cluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockClusterStoreInterfaceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockClusterStoreInterface)(nil).Delete), arg0)
}

// GetAll mocks base method
func (m *MockClusterStoreInterface) GetAll() ([]model.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]model.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockClusterStoreInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockClusterStoreInterface)(nil).GetAll))
}

// GetAllByName mocks base method
func (m *MockClusterStoreInterface) GetAllByName(arg0 string) ([]model.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllByName", arg0)
	ret0, _ := ret[0].([]model.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllByName indicates an expected call of GetAllByName
func (mr *MockClusterStoreInterfaceMockRecorder) GetAllByName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllByName", reflect.TypeOf((*MockClusterStoreInterface)(nil).GetAllByName), arg0)
}

// GetByID mocks base method
func (m *MockClusterStoreInterface) GetByID(arg0 uint) (*model.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*model.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockClusterStoreInterfaceMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockClusterStoreInterface)(nil).GetByID), arg0)
}

// Update mocks base method
func (m *MockClusterStoreInterface) Update(arg0 *model.Cluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockClusterStoreInterfaceMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockClusterStoreInterface)(nil).Update), arg0)
}

// UpdateClusterDetails mocks base method
func (m *MockClusterStoreInterface) UpdateClusterDetails(arg0 *model.Cluster, arg1 *model.ClusterDetails) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateClusterDetails", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateClusterDetails indicates an expected call of UpdateClusterDetails
func (mr *MockClusterStoreInterfaceMockRecorder) UpdateClusterDetails(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateClusterDetails", reflect.TypeOf((*MockClusterStoreInterface)(nil).UpdateClusterDetails), arg0, arg1)
}
